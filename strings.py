print('Привет, ' + 'мир')
# Используется конкатенация строк с помощью оператора +.
# Строки "Привет, " и "мир" объединяются в одну строку.
# Вывод: Привет, мир

print('Меня зовут %s' % 'Илья')
# Используется старый способ форматирования строк с оператором %.
# %s вставляет строку "Илья" в указанное место.
# Вывод: Меня зовут Илья

print('Меня зовут %s, мне %s' % ('Илья', 24))
# Форматирование с несколькими переменными через %.
# %s заменяется на соответствующие значения в кортежах ('Илья', 24).
# Вывод: Меня зовут Илья, мне 24

print('Меня зовут %(name)s, мне %(year)s' % {'name': 'Илья', 'year': 24})
# Форматирование с использованием словаря.
# Указывается имя ключа в скобках %(key)s, которое заменяется значением из словаря.
# Вывод: Меня зовут Илья, мне 24

print('Я учусь в {} {}'.format('Урбан -', 'University'))
# Метод .format() подставляет значения в фигурные скобки {} по порядку.
# В первом {} вставляется 'Урбан -', во втором {} — 'University'.
# Вывод: Я учусь в Урбан - University

print('Я учусь в {0} {1} {0}'.format('Урбан -', 'University'))
# Использование индексов в методе .format().
# {0} означает первый аргумент, {1} — второй. {0} повторяется дважды.
# Вывод: Я учусь в Урбан - University Урбан -

print('Я учусь в {title} {postfix} {title}'.format(title='Урбан -', postfix='University'))
# Метод .format() с именованными аргументами.
# {title} заменяется на 'Урбан -', а {postfix} — на 'University'.
# Вывод: Я учусь в Урбан - University Урбан -

print(f'{"Urban" * 2} это лучший университет!')
# Используется f-строка (f-string) для форматирования строк (Python 3.6+).
# Выражение {"Urban" * 2} вычисляется, умножая строку 'Urban' на 2.
# Вывод: UrbanUrban это лучший университет!

team1_num = 5
team2_num = 6
score_1 = 40
score_2 = 42
team1_time = 1552.512
team2_time = 2153.31451
# Проверяем первое условие
if score_1 > score_2 or score_1 == score_2 and team1_time > team2_time:
    # Если счёт команды 1 больше счёта команды 2
    # или если счёт равен, но время выполнения команды 1 больше времени выполнения команды 2:
    challenge_result = 'Победа команды Мастера кода!'
    # Переменная `challenge_result` сохраняет текст с результатом, описывающим победу команды "Мастера кода".
    # Теперь переменная `challenge_result` содержит строку: 'Победа команды Мастера кода!'
elif score_1 < score_2 or score_1 == score_2 and team1_time < team2_time:
    # Если счёт команды 1 меньше счёта команды 2
    # или если счёт равен, но время выполнения команды 1 меньше времени выполнения команды 2:
    challenge_result = 'Победа команды Волшебники Данных!'
    # Переменная `challenge_result` теперь сохраняет текст: 'Победа команды Волшебники Данных!'.
    # Таким образом, в зависимости от выполнения условий, переменная меняет своё содержимое.
else:
    # Если ни одно из вышеуказанных условий не выполняется (например, равный счёт и равное время):
    challenge_result = 'Ничья!'
    # В переменной `challenge_result` сохраняется строка: 'Ничья!'.
    # Это значение будет использоваться как итог, если все команды имеют равные показатели.

print('В команде Мастера кода участников: %s' %team1_num)
print('Итого сегодня в командах участников: %s и %s' % (team1_num, team2_num))
print('Команда волшебников данных решила задач: {}'.format(score_2))
print('Волшебники данных решили задачи за {}'.format(round(team2_time, 1)))
print(f'Команда решили {score_1} и {score_2} задач.')
print(f'Результат битвы: {challenge_result}')
print(f'Сегодня было решено {score_2 + score_1} задач, в среднем по { (team1_time + team2_time) / (score_2 + score_1):.2f} секунды на задачу')
